const leagueDAO = require('../daos/league.dao.js');
const AppError = require('../utils/app.error.js');

exports.createLeague = async (req, res, next) => {
    try {
        const { leagueName, teamSize, playerBudget /* other league settings */ } = req.body;

        if (!leagueName || !teamSize || playerBudget === undefined) {
            return next(new AppError('League name, team size, and player budget are required.', 400));
        }

        const leagueData = {
            leagueName,
            teamSize,
            playerBudget,
            commissionerId: req.user.id, // Set commissioner to the logged-in user
            // leagueCode will be auto-generated by the model if not provided
        };

        const newLeague = await leagueDAO.createLeague(leagueData);

        res.status(201).json({
            status: 'success',
            data: {
                league: newLeague,
            },
        });
    } catch (error) {
        next(error);
    }
};

exports.deleteLeague = async (req, res, next) => {
    try {
        const { leagueId } = req.params;
        const league = await leagueDAO.findLeagueById(leagueId);

        if (!league) {
            return next(new AppError('No league found with that ID', 404));
        }

        // Authorization check:
        // 1. Superadmin can delete any league.
        // 2. Commissioner can delete only their own league.
        const isSuperAdmin = req.user.role === 'superadmin';
        const isCommissionerOfThisLeague = 
            req.user.role === 'commissioner' && 
            league.commissionerId.toString() === req.user.id.toString();

        if (!isSuperAdmin && !isCommissionerOfThisLeague) {
            return next(new AppError('You do not have permission to delete this league.', 403));
        }

        const deletedLeague = await leagueDAO.deleteLeagueById(leagueId);
        if (!deletedLeague) {
             // Should not happen if findLeagueById found it, but as a safeguard
            return next(new AppError('Failed to delete league or league not found.', 404));
        }

        res.status(204).json({ // 204 No Content for successful deletion
            status: 'success',
            data: null,
        });
    } catch (error) {
        next(error);
    }
};

// TODO: Add other league controller methods (getLeague, getAllLeagues, updateLeague) 